AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Website CloudFront Stack

Parameters:
  DomainName:
    Type: String
  HostedZoneId:
    Type: String
  CertificateArn:
    Type: String

  # Bucket ve OAI ID'yi, Bucket Stack'ten alıyorsunuz
  BucketName:
    Type: String
  BucketRegionalDomainName:
    Type: String
  OaiCanonicalUserId:
    Type: String

Resources:
  WebsiteDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        HttpVersion: "http2"
        DefaultRootObject: "index.html"
        Aliases:
          - !Ref DomainName
        Origins:
          - Id: "S3Origin"
            DomainName: !Ref BucketRegionalDomainName
            S3OriginConfig:
              # Artık OAI kaynağını stack içinde tanımlamıyoruz, parametreden gelen ID’yi kullanıyoruz.
              OriginAccessIdentity: !Sub "origin-access-identity/cloudfront/${OaiCanonicalUserId}"
        DefaultCacheBehavior:
          TargetOriginId: "S3Origin"
          ViewerProtocolPolicy: "redirect-to-https"
          ...
        ViewerCertificate:
          AcmCertificateArn: !Ref CertificateArn
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.2_2021

  WebsiteAliasRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref HostedZoneId
      Name: !Ref DomainName
      Type: A
      AliasTarget:
        DNSName: !GetAtt WebsiteDistribution.DomainName
        HostedZoneId: !GetAtt WebsiteDistribution.HostedZoneId

Outputs:
  DistributionDomainName:
    Value: !GetAtt WebsiteDistribution.DomainName
  ...
